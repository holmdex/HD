name: Market Weather Update

on:
  schedule:
    - cron: '0 * * * *'  # Run hourly
  workflow_dispatch:      # Manual trigger option

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.1'
          use-public-rspm: true

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '3.1.1'

      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.3.450

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            libglpk-dev \
            libgit2-dev

      - name: Install R packages
        shell: Rscript {0}
        run: |
          # Install pak for better package management
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          
          # Install packages with pak
          pak::pkg_install(c(
            "tidyverse",
            "quantmod",
            "rvest",
            "httr",
            "jsonlite",
            "lubridate",
            "DT"
          ))
          
          # Verify installations
          installed <- rownames(installed.packages())
          required <- c("tidyverse", "quantmod", "rvest", "httr", "jsonlite", "lubridate", "DT")
          missing <- required[!required %in% installed]
          
          if (length(missing) > 0) {
            stop("Failed to install packages: ", paste(missing, collapse = ", "))
          }

      - name: Verify files
        run: |
          echo "Checking required files..."
          for file in market-weather.qmd market-weather-functions.R market-weather.css; do
            if [ ! -f "$file" ]; then
              echo "Error: Required file $file not found"
              exit 1
            fi
          done

      - name: Setup output directory
        run: mkdir -p _site

      - name: Render report
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Rendering market weather report..."
          quarto render market-weather.qmd --output-dir _site
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

      - name: Create error page
        if: failure()
        run: |
          mkdir -p _site
          cat > _site/market-weather.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <title>Market Weather Report - Temporarily Unavailable</title>
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <style>
                body {
                  font-family: system-ui, -apple-system, sans-serif;
                  line-height: 1.5;
                  padding: 2rem;
                  max-width: 800px;
                  margin: 0 auto;
                }
                .error-container {
                  background: #fff3cd;
                  border: 1px solid #ffeeba;
                  border-radius: 8px;
                  padding: 2rem;
                  text-align: center;
                  margin-top: 2rem;
                }
                h1 { color: #856404; }
              </style>
            </head>
            <body>
              <div class="error-container">
                <h1>⚠️ Service Temporarily Unavailable</h1>
                <p>The Market Weather Report is currently unavailable. 
                   Updates have been paused and will resume after manual verification.</p>
                <p>Last checked: $(date -u "+%Y-%m-%d %H:%M UTC")</p>
              </div>
            </body>
          </html>
          EOL

      - name: Deploy error page
        if: failure()
        uses: actions/deploy-pages@v3

      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Market Weather Report update failed. Scheduled runs will be paused until manually restarted."
