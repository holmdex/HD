name: Market Weather Update

on:
  schedule:
    - cron: '0 */2 * * *'  # Run every 2 hours
  workflow_dispatch:        # Manual trigger option

jobs:
  update-market-weather:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    # Add concurrency to prevent overlapping runs
    concurrency:
      group: market-weather-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2.7.0
        with:
          r-version: '4.2.1'
          use-public-rspm: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            libglpk-dev \
            libgit2-dev \
            pandoc \
            pandoc-citeproc

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2.7.0
        with:
          pandoc-version: '3.1.1'

      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: '1.4.549'
          tinytex: true

      - name: Verify Quarto installation
        run: |
          echo "Checking Quarto version..."
          quarto --version
          echo "Checking Quarto installation..."
          quarto check
          echo "Listing Quarto installation directory..."
          ls -la $(which quarto)
          echo "Quarto capabilities..."
          quarto capabilities

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('**/renv.lock') }}
          restore-keys: ${{ runner.os }}-r-

      - name: Install R packages
        shell: Rscript {0}
        run: |
          # Function to check and install packages
          install_if_missing <- function(packages) {
            new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
            if(length(new_packages)) install.packages(new_packages)
            
            # Verify installations
            missing <- packages[!(packages %in% installed.packages()[,"Package"])]
            if(length(missing)) {
              stop("Failed to install: ", paste(missing, collapse=", "))
            }
          }
          
          # Required packages
          required_packages <- c(
            'tidyverse',
            'quantmod',
            'rvest',
            'httr',
            'jsonlite',
            'lubridate',
            'DT'
          )
          
          # Install packages
          install_if_missing(required_packages)
          
          # Verify all packages can be loaded
          lapply(required_packages, function(pkg) {
            if(!require(pkg, character.only = TRUE)) {
              stop(paste("Failed to load package:", pkg))
            }
            print(paste("✓ Successfully loaded:", pkg))
          })

      - name: Verify file structure
        run: |
          echo "Current directory contents:"
          ls -la
          
          # List of required files
          required_files=(
            "market-weather.qmd"
            "market-weather-functions.R"
            "market-weather.css"
          )
          
          # Check each required file
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Error: Required file $file not found"
              exit 1
            fi
            echo "✓ Found $file"
            echo "First few lines of $file:"
            head -n 5 "$file"
          done
          
          # Set proper permissions
          chmod 644 *.R *.qmd *.css

      - name: Setup output directory
        run: mkdir -p _site

      - name: Render report
        run: |
          # Set R session options
          Rscript -e 'options(repos = c(CRAN = "https://cloud.r-project.org"))'
          
          # Test source files first
          echo "Testing R files..."
          Rscript -e 'tryCatch({source("market-weather-functions.R")}, error = function(e) {print(e); quit(status=1)})'
          
          # Render with detailed output
          echo "Rendering QMD..."
          quarto render market-weather.qmd --output-dir _site --debug
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site
        if: success()
        continue-on-error: false

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Handle failure
        if: failure()
        run: |
          # Create error page
          mkdir -p _site
          cat > _site/market-weather.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <title>Market Weather Report - Manual Restart Required</title>
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <style>
                body {
                  font-family: system-ui, -apple-system, sans-serif;
                  line-height: 1.5;
                  padding: 2rem;
                  max-width: 800px;
                  margin: 0 auto;
                }
                .error-container {
                  background: #fff3cd;
                  border: 1px solid #ffeeba;
                  border-radius: 8px;
                  padding: 2rem;
                  text-align: center;
                  margin-top: 2rem;
                }
                h1 { color: #856404; }
              </style>
            </head>
            <body>
              <div class="error-container">
                <h1>⚠️ Manual Restart Required</h1>
                <p>The Market Weather Report has encountered an error and requires manual intervention.</p>
                <p>Please visit the GitHub Actions page to restart the workflow.</p>
                <p>Last attempt: $(date -u "+%Y-%m-%d %H:%M UTC")</p>
                <p>Error details are available in the workflow run logs.</p>
              </div>
            </body>
          </html>
          EOL

          # Create issue for manual intervention
          gh issue create \
            --title "Market Weather Report: Manual Restart Required" \
            --body "The Market Weather Report workflow failed at $(date -u) and requires manual restart. Please check the logs and restart the workflow manually." \
            --label "incident" \
            || echo "Could not create issue. Please check manually."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
