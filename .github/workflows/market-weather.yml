name: Market Weather Update

on:
  schedule:
    - cron: '0 * * * *'  # Run hourly
  workflow_dispatch:      # Manual trigger option

jobs:
  # Check if previous run failed
  check_previous:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check previous run status
        id: check
        run: |
          # Get previous run status using GitHub API
          previous_status=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$(basename ${{ github.workflow }})/runs?per_page=2" \
            | jq -r '.workflow_runs[1].conclusion')
          
          if [ "$previous_status" = "failure" ]; then
            echo "Previous run failed. Stopping scheduled runs."
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  cleanup:
    needs: check_previous
    if: needs.check_previous.outputs.should_run == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 3

  render:
    needs: cleanup
    if: needs.check_previous.outputs.should_run == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.1'
          use-public-rspm: true

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '3.1.1'

      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.3.450

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: r-${{ runner.os }}-${{ hashFiles('**/market-weather.qmd') }}
          restore-keys: r-${{ runner.os }}-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev

      - name: Install R packages
        run: |
          install.packages(c(
            'tidyverse',
            'quantmod',
            'rvest',
            'httr',
            'jsonlite',
            'lubridate',
            'DT'
          ), repos = 'https://cloud.r-project.org')
        shell: Rscript {0}

      - name: Verify files
        id: verify
        continue-on-error: true
        run: |
          missing_files=()
          for file in market-weather.qmd market-weather-functions.R market-weather.css; do
            if [ ! -f "$file" ]; then
              missing_files+=($file)
            fi
          done
          
          if [ ${#missing_files[@]} -ne 0 ]; then
            echo "Missing files: ${missing_files[*]}"
            exit 1
          fi

      - name: Create error page
        if: failure()
        run: |
          mkdir -p _site
          cat << EOF > _site/market-weather.html
          <!DOCTYPE html>
          <html>
            <head>
              <title>Market Weather Report - Error</title>
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <style>
                body { font-family: system-ui; padding: 20px; }
                .error { 
                  background: #fff3cd;
                  border: 1px solid #ffeeba;
                  padding: 20px;
                  border-radius: 8px;
                  text-align: center;
                }
              </style>
            </head>
            <body>
              <div class="error">
                <h2>⚠️ Service Temporarily Unavailable</h2>
                <p>The Market Weather Report is currently unavailable. Please try again later.</p>
                <p>Last check: $(date -u '+%Y-%m-%d %H:%M:%S UTC')</p>
              </div>
            </body>
          </html>
          EOF

      - name: Render report
        if: steps.verify.outcome == 'success'
        run: |
          mkdir -p _site
          quarto render market-weather.qmd --output-dir _site
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
          TZ: UTC

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v3

      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Market Weather Report update failed. Scheduled runs will be paused until manually restarted."
          echo "To resume scheduled updates, trigger a manual run using the 'Run workflow' button."
