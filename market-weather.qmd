---
title: "Market Weather Report"
format: 
  html:
    embed-resources: true
    self-contained: true
    theme: none
    css: market-weather.css
    include-in-header:
      text: |
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <base target="_parent">
---

```{r setup}
#| include: false
#| error: false
#| warning: false
#| message: false

start_time <- Sys.time()

# Load required packages with error handling
required_packages <- c(
  'tidyverse', 
  'quantmod',  # For Yahoo Finance
  'jsonlite',  # For JSON handling
  'httr',      # For HTTP requests
  'lubridate', # For date handling
  'DT'         # For interactive tables
)

load_packages <- function(packages) {
  lapply(packages, function(pkg) {
    if (!require(pkg, character.only = TRUE, quietly = TRUE)) {
      stop(sprintf("Required package '%s' is not installed", pkg))
    }
  })
}

tryCatch({
  # Load packages
  suppressPackageStartupMessages(load_packages(required_packages))
  
  # Source helper functions
  source("market-weather-functions.R")
  
  # Time periods with business day adjustment
  current_date <- Sys.Date()
  is_weekend <- weekdays(current_date) %in% c("Saturday", "Sunday")
  start_date <- current_date - days(if(is_weekend) 32 else 30)
  
  # Fetch and process data
  market_data <- fetch_all_market_data(market_indices, start_date)
  
  if (!is.null(market_data) && nrow(market_data) > 0) {
    weather_summary <- calculate_market_weather(market_data)
  } else {
    weather_summary <- tibble()
  }
  
}, error = function(e) {
  warning(sprintf("Setup error: %s", e$message))
  weather_summary <- tibble()
})

execution_time <- as.numeric(difftime(Sys.time(), start_time, units = "secs"))
```

:::{.market-weather-widget}
# Market Weather Report

```{r weather-table}
#| echo: false
#| results: asis

if (exists("weather_summary") && nrow(weather_summary) > 0) {
  render_weather_table(weather_summary)
} else {
  cat('<div class="no-data">No market data available at this time. Please try again later.</div>')
}
```

::: {.legend-container}
🌞 Exceptional (>5%) | 🌤️ Very Strong (3-5%) | ⛅ Strong (1-3%) | 🌥️ Positive (0-1%) | 
☁️ Stable (-1-0%) | 🌧️ Cautious (-3--1%) | ⛈️ Weak (-5--3%) | 🌪️ Very Weak (-7--5%) | ⚡ Critical (<-7%)
:::

::: {.widget-footer}
Last Updated: `r format(Sys.time(), "%B %d, %Y at %H:%M %Z", tz = "UTC")`  
Data Refresh Interval: Hourly  
Performance: `r sprintf("%.2f seconds", execution_time)`
:::
:::

```{js}
// Ensure all links open in parent window
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('a').forEach(link => {
    link.target = '_parent';
  });
  
  // Initialize with daily view
  setTimeout(() => {
    const table = document.querySelector('.weather-table')?.DataTable();
    if (table) {
      // Hide all columns except daily initially
      [3, 4].forEach(col => table.column(col).visible(false));
    }
  }, 0);
  
  // Notify parent window of height changes
  const resizeObserver = new ResizeObserver(entries => {
    const height = document.body.scrollHeight;
    window.parent.postMessage({ type: 'resize', height }, '*');
  });
  
  resizeObserver.observe(document.body);
});
```
